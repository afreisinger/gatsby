---
name: Build and publish container in development

on:
  push:
    branches:
      - '!main'
  pull_request:
    types: [opened, synchronize, reopened]
    
permissions:
    contents: write

env:
  REGISTRY_IMAGE: afreisinger/gatsby

jobs:
  build_multi:
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.latest_release.outputs.version }}
    
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      
      - name: Prepare Environment
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
            images: ${{ env.REGISTRY_IMAGE }}

      - name: Check labels
        run: |
          echo "Labels: ${{ steps.meta.outputs.labels }}"     
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME  }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          build-args: |
                      IMAGE_VERSION=${{ steps.latest_release.outputs.version }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
            mkdir -p /tmp/digests
            digest="${{ steps.build.outputs.digest }}"
            touch "/tmp/digests/${digest#sha256:}"
        
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
            name: digests-${{ env.PLATFORM_PAIR }}
            path: /tmp/digests/*
            if-no-files-found: error
            retention-days: 1
            
  merge:
    runs-on: ubuntu-latest
    needs:
      - build_multi
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Check labels
        run: |
            echo "Labels: ${{ steps.meta.outputs.labels }}"
           
      - name: Get todays date
        id: date
        run: echo date=$(date +%Y-%m-%d) >> $GITHUB_OUTPUT

      - name: Get branch name
        id: branch
        run: echo branch=$(echo ${{ github.ref }} | sed 's/refs\/heads\///') >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
             
      - name: List digests
        run: ls -l /tmp/digests
  
      - name: Show digests
        run: cat /tmp/digests/*
            
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          
          tags="-t ${{ env.REGISTRY_IMAGE }}:dev-${{ github.event.number }}-${{ steps.date.outputs.date }} -t ${{ env.REGISTRY_IMAGE }}:dev-${{ github.event.number }} -t ${{ env.REGISTRY_IMAGE }}:dev-${{ github.event.number }}-${{ steps.branch.outputs.branch }}"
          digest=$(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
          echo "Tags: $all_tags, Digest: $digest"
          docker buildx imagetools create $tags $digest
       
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}